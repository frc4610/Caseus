// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4610.Test.subsystems;

import org.usfirst.frc4610.Test.RobotMap;
import org.usfirst.frc4610.Test.commands.*;
import com.ctre.CANTalon;
import org.usfirst.frc4610.Test.OI;
import org.usfirst.frc4610.Test.Robot;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.VictorSP;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon leftBack = RobotMap.driveTrainleftBack;
    private final CANTalon rightFront = RobotMap.driveTrainrightFront;
    private final CANTalon leftFront = RobotMap.driveTrainleftFront;
    private final CANTalon rightBack = RobotMap.driveTrainrightBack;
    private final RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new Move());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void takeJoystickInputs(Joystick left, Joystick right)
    {
    	
    	robotDrive41.arcadeDrive(left.getRawAxis(1), left.getRawAxis(0));
    	//robotDrive41.tankDrive(left.getRawAxis(1), right.getRawAxis(1));   	
    	
        //SmartDashboard.putNumber("Left", left.getRawAxis(1));
        //SmartDashboard.putNumber("Right", right.getRawAxis(1));
    	
    	
    }
    public void stop()
    {
    	robotDrive41.drive(0,0);
    }
}

